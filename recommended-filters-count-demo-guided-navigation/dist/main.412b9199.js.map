{"version":3,"sources":["main.js"],"names":["appID","apiKey","search","instantsearch","indexName","searchClient","algoliasearch","addWidget","widgets","configure","hitsPerPage","hits","container","templates","empty","item","hit","largeImage","_highlightResult","brand","value","title","price","pagination","searchBox","stats","refinementList","attribute","limit","showMore","searchable","searchablePlaceholder","renderRefinementList","renderOptions","isFirstRender","items","isFromSearch","refine","createURL","isShowingMore","canToggleShowMore","searchForItems","toggleShowMore","widgetParams","input","document","createElement","ul","button","textContent","addEventListener","event","currentTarget","appendChild","querySelector","innerHTML","map","isRefined","label","count","join","querySelectorAll","forEach","element","preventDefault","dataset","disabled","customRefinementList","connectors","connectRefinementList","addWidgets","showMoreLimit","start"],"mappings":"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","file":"main.412b9199.js","sourceRoot":"..","sourcesContent":["\n\nlet appID = \"LATENCY\";\nlet apiKey = \"af044fb0788d6bb15f807e4420592bc5\";\n\nconst search = instantsearch({\n  indexName: \"instant_search_solutions_ecommerce\",\n  searchClient: algoliasearch(appID, apiKey)\n});\n\nsearch.addWidget(\n  instantsearch.widgets.configure({\n    hitsPerPage: 12\n  })\n);\n\nsearch.addWidget(\n  instantsearch.widgets.hits({\n    container: \"#hits\",\n    templates: {\n      empty: \"No results\",\n      item(hit) {\n        return `\n        <div class=\"item\">\n                <figure class=\"hit-image-container\"><div class=\"hit-image-container-box\"><img class=\"hit-image\" src=\"${hit.largeImage}\" alt=\"\"></div></figure>\n                <p class=\"hit-category\">&#8203;â€‹</p>\n                <div class=\"item-content\">\n                    <p class=\"brand hit-tag\">${hit._highlightResult.brand ? hit._highlightResult.brand.value : ''}</p>\n                    <p class=\"name\">${hit._highlightResult.title.value}</p>\n                    <div class=\"hit-description\"><b class=\"hit-currency\">$</b>${hit.price}</div>\n                </div>\n            </div>\n            <br>`;\n      }\n    }\n  })\n);\n\n// search.addWidget(\n//   new PredictiveSearchBoxWidget({\n//     container: \"#predictive-search-box\",\n//     querySuggestionsIndex: \"atis-prods_query_suggestions\",\n//     appID: appID,\n//     apiKey: apiKey,\n//     placeholder: \"Search for products and brands\",\n//     maxSuggestions: 30,\n//     recentSearchesEnabled: false,\n//     maxSavedSearchesPerQuery: 5\n//   })\n// );\n\nsearch.addWidget(\n  instantsearch.widgets.pagination({\n    container: \"#pagination\"\n  })\n);\nsearch.addWidget(\n  instantsearch.widgets.searchBox({\n    container: \"#searchbox\"\n  })\n);\n\nsearch.addWidget(\n  instantsearch.widgets.stats({\n    container: \"#stats-container\"\n  })\n);\n\nsearch.addWidget(\n  instantsearch.widgets.refinementList({\n    container: \"#brand\",\n    attribute: \"brand\",\n    limit: 5,\n    showMore: true,\n    searchable: true,\n    searchablePlaceholder: \"Search our brands\"\n  })\n);\n\n// search.addWidget(\n//   instantsearch.widgets.refinementList({\n//     container: \"#categories\",\n//     attribute: \"categories\"\n//   })\n// );\n\n// search.addWidget(\n//   instantsearch.widgets.rangeSlider({\n//     container: '#price',\n//     attribute: 'price',\n//     pips: !1,\n\n\n//     tooltips: {\n//         format: function(rawValue) {\n//             return Math.round(rawValue).toLocaleString().concat(\"$\")\n//         }\n//     },\n//     cssClasses: {\n//       root: ['rheostat', 'DefaultProgressBar_progressBar'],\n//       handle: [\n//         'DefaultHandle_handle'\n//       ],\n//       tooltip: 'rheostat-value'\n//     },\n//   })\n\n// );\n\n\n// 1. Create a render function\nconst renderRefinementList = (renderOptions, isFirstRender) => {\n  const {\n    items,\n    isFromSearch,\n    refine,\n    createURL,\n    isShowingMore,\n    canToggleShowMore,\n    searchForItems,\n    toggleShowMore,\n    widgetParams,\n  } = renderOptions;\n\n  if (isFirstRender) {\n    const input = document.createElement('input');\n    const ul = document.createElement('ul');\n    const button = document.createElement('button');\n    button.textContent = 'Show more';\n\n    input.addEventListener('input', event => {\n      searchForItems(event.currentTarget.value);\n    });\n\n    button.addEventListener('click', () => {\n      toggleShowMore();\n    });\n\n    widgetParams.container.appendChild(input);\n    widgetParams.container.appendChild(ul);\n    widgetParams.container.appendChild(button);\n  }\n\n  const input = widgetParams.container.querySelector('input');\n\n  if (!isFromSearch && input.value) {\n    input.value = '';\n  }\n\n  widgetParams.container.querySelector('ul').innerHTML = items\n    .map(\n      item => `\n        <li>\n          <a\n            href=\"${createURL(item.value)}\"\n            data-value=\"${item.value}\"\n            style=\"font-weight: ${item.isRefined ? 'bold' : ''}\"\n          >\n            ${item.label} (${item.count})\n          </a>\n        </li>\n      `\n    )\n    .join('');\n\n  [...widgetParams.container.querySelectorAll('a')].forEach(element => {\n    element.addEventListener('click', event => {\n      event.preventDefault();\n      refine(event.currentTarget.dataset.value);\n    });\n  });\n\n  const button = widgetParams.container.querySelector('button');\n\n  button.disabled = !canToggleShowMore;\n  button.textContent = isShowingMore ? 'Show less' : 'Show more';\n};\n\n// 2. Create the custom widget\nconst customRefinementList = instantsearch.connectors.connectRefinementList(\n  renderRefinementList\n);\n\n// 3. Instantiate\nsearch.addWidgets([\n  customRefinementList({\n    container: document.querySelector('#refinement-list'),\n    attribute: 'brand',\n    showMoreLimit: 20,\n  })\n]);\n\nsearch.start();\n"]}